buildscript {
    ext.kotlin_version = '1.2.10'
    ext {
        springBootVersion = '2.0.0.M3'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'de.undercouch:gradle-download-task:3.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.3"
    id 'net.saliman.cobertura' version '2.3.1'
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'de.undercouch.download'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok:1.16.14')
    compile('org.tensorflow:tensorflow:1.3.0-rc1')
    compile('com.google.protobuf:protobuf-java:3.3.1')
    compile('commons-io:commons-io:2.5')
    compile('jmimemagic:jmimemagic:0.1.2')
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    asciidoctor('org.springframework.restdocs:spring-restdocs-asciidoctor')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

test {
    outputs.dir snippetsDir
}

task copyRestDocs(type: Copy) {
    dependsOn asciidoctor
    from "${asciidoctor.outputDir}/html5"
    into "${sourceSets.main.output.resourcesDir}/static/docs"
}

jar {
    baseName = "inception-serving-sb"
    dependsOn copyRestDocs
    from("build/asciidoc/html5") {
        into 'public/docs'
    }
}

bootRun {
    dependsOn copyRestDocs
}

mainClassName = 'com.newsplore.Application'

import de.undercouch.gradle.tasks.download.Download

task downloadInceptionFrozen(type: Download) {
    onlyIfNewer true
    src 'https://storage.googleapis.com/download.tensorflow.org/models/inception_v3_2016_08_28_frozen.pb.tar.gz'
    dest new File(buildDir, 'inception_v3_2016_08_28_frozen.pb.tar.gz')
}

task fetchInceptionFrozenModel(dependsOn: downloadInceptionFrozen, type: Copy) {
    from tarTree(downloadInceptionFrozen.dest)
    into 'src/main/resources/inception-v3'
}

build.dependsOn fetchInceptionFrozenModel, copyRestDocs
cobertura.coverageFormats = ['html', 'xml']
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}